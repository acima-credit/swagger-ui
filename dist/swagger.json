{
    "swagger": "2.0",
    "info": {
        "description": "API for submitting lease applications and processing leases.\n\nTake a look at the <a href=\"https://drive.google.com/open?id=0BwitL5Bm33-mb0I2SFZwZGYwQk1VOHcyWGktS1VoWk93M3p3\">flow diagram</a> for an overview of the lease application and lease process flow.\n\n### FAQ\n\n#### How can I obtain the current status of the lease or lease application?\nYou can perform a GET request for the lease application or lease.  The returned object will have the status field populated.  When polling for a status change, you can include an If-Modified-Since header with the request, to avoid retrieving the data when there are no changes.\n",
        "version": "2.0",
        "title": "Acima Credit Lease API",
        "termsOfService": "https://acimacredit.com/api/tos.html",
        "contact": {
            "name": "Acima Credit",
            "url": "https://acimacredit.com/",
            "email": "apis@acimacredit.com"
        },
        "license": {
            "name": "Acima Credit License",
            "url": "https://acimacredit.com/api/license.html"
        }
    },
    "host": "api-sandbox.acimacredit.com",
    "basePath": "/",
    "tags": [
        {
            "name": "lease",
            "description": "Lease Controller"
        },
        {
            "name": "lease application",
            "description": "Lease Application Controller"
        }
    ],
    "paths": {
        "/api/v1/lease/{leaseId}": {
            "get": {
                "tags": [
                    "lease"
                ],
                "summary": "Get Lease",
                "description": "Retrieves a lease by id",
                "operationId": "getUsingGET_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseId",
                        "in": "path",
                        "description": "The id of the lease",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Lease"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "lease"
                ],
                "summary": "Update Lease",
                "description": "Update an existing lease.  The exact kind of update is controlled via the action request parameter.\n\nSupported Actions:\n  * __generate_docs__ - Generates the lease documents for review and signing.  This action is only available after the merchant invoice has been submitted.  Only the id field is required in the lease object parameter.\n  * __request_signature__ - Sends a signature request to the applicant.  The request will be sent to their email, and an SMS message will be sent to their phone number.\n  * __confirm_delivery__ - Used to indicate that the goods or services have been delivered and received by the applicant(s).\n  * __undo_generate_docs__ - Moves the lease back to the pending_invoice state, allowing the invoice data to be updated.\n  * __undo_acceptance__ - Reverts the lease back to a lease application, allowing the lease application and applicant data to be updated.",
                "operationId": "putUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseId",
                        "in": "path",
                        "description": "The id of the lease",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "lease",
                        "description": "The lease to update.  The id is required, and __MUST__ match the id in the URL.  Other required data depends on the action.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Lease"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action to take on the lease application.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "generate_docs",
                            "send_signature_request",
                            "confirm_delivery",
                            "undo_generate_docs",
                            "undo_acceptance"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The lease application was accepted by the system and updated.  The lease application is returned with the latest data.",
                        "schema": {
                            "$ref": "#/definitions/Lease"
                        }
                    },
                    "400": {
                        "description": "The action parameter is invalid, or the id in the URL does not match the id in the lease body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "The lease is missing required information, or contains incorrectly formatted data.  The extra field in the response object will contain the lease application object, as received in the request.",
                        "schema": {
                            "$ref": "#/definitions/UnprocessableEntityResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            }
        },
        "/api/v1/lease/{leaseId}/delivery_confirmation": {
            "get": {
                "tags": [
                    "lease"
                ],
                "summary": "Get the delivery confirmation for the lease",
                "description": "Retrieves the delivery confirmation for the lease.  Returns status 404 if a delivery confirmation has not been saved yet.",
                "operationId": "getUsingGET_3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseId",
                        "in": "path",
                        "description": "The id of the lease",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Delivery Confirmation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Returned if the lease id is invalid, or a delivery confirmation has not been saved yet",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "lease"
                ],
                "summary": "Saves a delivery confirmation for a lease",
                "description": "Currently this endpoint only supports the save action action. \nSupported Actions:\n  * __save__ - Saves a delivery confirmation to the lease.  Checks the delivery confirmation to make sure all required information is entered and valid.  If the check succeeds, the delivery confirmation is saved to the lease.",
                "operationId": "putUsingPUT_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseId",
                        "in": "path",
                        "description": "The id of the lease",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "deliveryConfirmation",
                        "description": "The delivery confirmation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Delivery Confirmation"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action to take on the delivery confirmation",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "save"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The delivery confirmation was accepted and saved by the system.  The delivery confirmation is returned with the latest data.",
                        "schema": {
                            "$ref": "#/definitions/Delivery Confirmation"
                        }
                    },
                    "400": {
                        "description": "The action parameter is invalid, or the id in the URL does not match the id in the delivery confirmation body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The lease does not exist",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "The delivery confirmation is missing required information, or contains incorrectly formatted data.  The extra field in the response object will contain the delivery confirmation object, as received in the request.",
                        "schema": {
                            "$ref": "#/definitions/UnprocessableEntityResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            }
        },
        "/api/v1/lease/{leaseId}/invoice": {
            "get": {
                "tags": [
                    "lease"
                ],
                "summary": "Get the invoice for the lease",
                "description": "Retrieves the merchant invoice for the lease.  Until the first save operation on the invoice, calls to this endpoint return a \"template\" invoice that is populated with data relevant to the merchant.  After a successful save operation, it returns the persisted invoice.\n\nA \"template\" invoice has  the following fields populated: \n  - max_lease_amount - The same value as the max_approved_amount in the lease\n  - initial_payment - The initial payment amount\n  - merchant_invoice_total - Initialized to zero\n  - amount_collected - Initialized to zero\n  - simple_invoice_total - The initial_payment value\n  - additional_down_payment - Initialized to zero\n  - tax - Initialized to the amount levied against the initial payment, if applicable, or zero\n  - final_lease_amount - Initialized to zero",
                "operationId": "getUsingGET_4",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseId",
                        "in": "path",
                        "description": "The id of the lease",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "lease"
                ],
                "summary": "Re-calculate (without saving), or save an invoice",
                "description": "Use the action parameter to either re-calculate an invoice without saving it, or save the invoice.\nSupported Actions:\n  * __recalc__ - Recalculates the amounts of an invoice.  The values of some fields are dependent on values of others.  Use this endpoint to obtain the latest values of these dependent fields.\n  * __save__ - Saves an invoice to the lease.  Checks the invoice to make sure all required information is entered and valid.  If the check succeeds, the invoice is saved to the lease and the lease status is updated.",
                "operationId": "putUsingPUT_3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseId",
                        "in": "path",
                        "description": "The id of the lease",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "invoice",
                        "description": "The invoice",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action to take on the invoice",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "calculate",
                            "save"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The invoice was accepted by the system, and recalculated or saved.  The invoice is returned with the latest data.",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    "400": {
                        "description": "The action parameter is invalid, or the id in the URL does not match the id in the lease body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The lease id is invalid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "The invoice is missing required information, or contains incorrectly formatted data.  The extra field in the response object will contain the invoice object, as received in the request.",
                        "schema": {
                            "$ref": "#/definitions/UnprocessableEntityResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            }
        },
        "/api/v1/lease_application": {
            "post": {
                "tags": [
                    "lease application"
                ],
                "summary": "Submit Lease Application",
                "description": "Submits a new lease application.  The application must be populated with the minimum set of required data to be accepted.  If accepted, the returned object will be populated with an ID, and status.  In most cases the status will be \"processing\", and the consumer of the API should query for the latest status by calling the \"Get Lease Application\" endpoint with the returned ID.",
                "operationId": "postUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "leaseApplication",
                        "description": "leaseApplication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Lease Application"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The lease application was accepted by the system and created.  The lease application is returned with the ID and status fields populated.",
                        "schema": {
                            "$ref": "#/definitions/Lease Application"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "The path to the newly created lease application"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "The lease application is missing required information, or contains incorrectly formatted data.  The extra field in the response object will contain the lease application object, as received in the request.",
                        "schema": {
                            "$ref": "#/definitions/UnprocessableEntityResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            }
        },
        "/api/v1/lease_application/disclosures": {
            "get": {
                "tags": [
                    "lease application"
                ],
                "summary": "Get Lease Application Disclosures",
                "description": "Retrieves the disclosures that should be presented to the applicant at the beginning of the lease application process.  There is only one set of disclosures at this time.",
                "operationId": "getUsingGET_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "If-Modified-Since",
                        "in": "header",
                        "description": "An optional timestamp parameter (RFC 1123 format) that can be used to skip the response body if the lease application disclosures have not been updated since the specified date.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Lease Application Disclosures"
                        }
                    },
                    "304": {
                        "description": "The lease application disclosures have not been modified since the date supplied in the If-Modified-Since header"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            }
        },
        "/api/v1/lease_application/{leaseApplicationId}": {
            "get": {
                "tags": [
                    "lease application"
                ],
                "summary": "Get Lease Application",
                "description": "Retrieves a lease application by id",
                "operationId": "getUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseApplicationId",
                        "in": "path",
                        "description": "The id of the lease application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "If-Modified-Since",
                        "in": "header",
                        "description": "An optional timestamp parameter (RFC 1123 format) that can be used to skip the response body if the lease application has not been updated since the specified date.",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Lease Application"
                        }
                    },
                    "304": {
                        "description": "The lease application has not been modified since the date supplied in the If-Modified-Since header"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "lease application"
                ],
                "summary": "Update Lease Application",
                "description": "Update an existing lease application.  The exact kind of update is controlled via the action request parameter.\n\nSupported Actions:\n  * __correct__ - Updates the information in a submitted lease application.\n  * __set_approval_acceptance__ - Updates the applicant's acceptance decision on an approved lease application.  The applicant(s) can either accept or reject the offer.  On acceptance a the approval_accepted_at field is populated and a new lease is created from the lease application.  The id of the lease is returned in the lease application record as the lease_id property. Any further work should be performed against the lease.",
                "operationId": "putUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "leaseApplicationId",
                        "in": "path",
                        "description": "The id of the lease application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "leaseApplication",
                        "description": "The lease application.  The id is required, and __MUST__ match the id in the URL.  Other required data depends on the action.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Lease Application"
                        }
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "The action to take on the lease application.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "correct",
                            "update_acceptance"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The lease application was accepted by the system and updated.  The lease application is returned with the latest data.",
                        "schema": {
                            "$ref": "#/definitions/Lease Application"
                        }
                    },
                    "400": {
                        "description": "The action parameter is invalid, or the id in the URL does not match the id in the lease application body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "The lease application is missing required information, or contains incorrectly formatted data.  The extra field in the response object will contain the lease application object, as received in the request.",
                        "schema": {
                            "$ref": "#/definitions/UnprocessableEntityResponse"
                        }
                    }
                },
                "security": [
                    {
                        "oauth2schema": [
                            "default"
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "oauth2schema": {
            "type": "oauth2",
            "authorizationUrl": "http://35.162.214.220/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "default": "The default scope"
            }
        }
    },
    "definitions": {
        "Delivery Confirmation": {
            "type": "object",
            "required": [
                "any_undelivered_items",
                "delivery_date"
            ],
            "properties": {
                "any_damaged_items": {
                    "type": "boolean",
                    "example": false,
                    "description": "Any damaged items during delivery"
                },
                "any_undelivered_items": {
                    "type": "boolean",
                    "example": false,
                    "description": "Any undelivered items that are listed on the Merchant Agreement"
                },
                "delivery_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date merchandise was delivered"
                },
                "leaseId": {
                    "type": "string",
                    "description": "The id of the lease that this delivery confirmation belongs to"
                }
            },
            "description": "Captures information about a delivery confirmation."
        },
        "Employment Information": {
            "type": "object",
            "required": [
                "employer_name",
                "employer_phone",
                "hired_on",
                "income_type",
                "last_payday_on",
                "next_payday_on",
                "pay_frequency",
                "paycheck_amount",
                "payment_method"
            ],
            "properties": {
                "employer_name": {
                    "type": "string",
                    "description": "Name of the applicant's employer."
                },
                "employer_phone": {
                    "type": "string",
                    "description": "Phone number of the applicant's employer.  Must be at least 10 digits."
                },
                "hired_on": {
                    "type": "string",
                    "format": "date",
                    "description": "Date applicant was hired by the employer. MM/YYYY"
                },
                "income_type": {
                    "type": "string",
                    "description": "The type of income received for the this employment",
                    "enum": [
                        "full_time_job",
                        "part_time_job",
                        "self_employment",
                        "social_security",
                        "retirement",
                        "military",
                        "long_term_disability",
                        "alimony"
                    ]
                },
                "last_payday_on": {
                    "type": "string",
                    "format": "date",
                    "description": "Date applicant was previously paid."
                },
                "next_payday_on": {
                    "type": "string",
                    "format": "date",
                    "description": "Date applicant will next be paid."
                },
                "pay_frequency": {
                    "type": "string",
                    "description": "How often the applicant is paid.",
                    "enum": [
                        "weekly",
                        "bi_weekly",
                        "semi_monthly",
                        "monthly"
                    ]
                },
                "paycheck_amount": {
                    "type": "number",
                    "description": "Applicant's paycheck amount in USD."
                },
                "payment_method": {
                    "type": "string",
                    "description": "The payment method for the this employment",
                    "enum": [
                        "direct_deposit",
                        "printed_check"
                    ]
                }
            },
            "description": "Captures information about an applicant's employment."
        },
        "Invoice": {
            "type": "object",
            "required": [
                "amount_collected",
                "damaged",
                "description",
                "expected_delivery_date",
                "merchandise_condition",
                "merchant_invoice_total"
            ],
            "properties": {
                "lease_id": {
                    "type": "string",
                    "description": "The id of the lease that this invoice belongs to",
                    "readOnly": true
                },
                "max_lease_amount": {
                    "type": "number",
                    "description": "The maximum allowed lease amount.  This is the same value as the approved amount of the lease",
                    "readOnly": true
                },
                "merchandise_condition": {
                    "type": "string",
                    "description": "The merchandise condition",
                    "enum": [
                        "new",
                        "used",
                        "previously_rented"
                    ]
                },
                "expected_delivery_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expected delivery date"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the goods and/or services"
                },
                "damaged": {
                    "type": "boolean",
                    "example": false,
                    "description": "Are any of the goods damaged?"
                },
                "damages_description": {
                    "type": "string",
                    "description": "Description of damages if any.  Required when damaged is set to true.  Disallowed when damaged is set to false"
                },
                "merchant_invoice_total": {
                    "type": "number",
                    "description": "The total amount invoiced for goods and/or services by the merchant (Note: Depending on jurisdiction this amount may or may not include sales tax)"
                },
                "amount_collected": {
                    "type": "number",
                    "description": "The amount collected from the customer by the merchant.  This amount must be enough to cover the initial payment, and if applicable, any taxes levied against the initial payment"
                },
                "simple_invoice_total": {
                    "type": "number",
                    "description": "The total amount invoiced to the customer by Simple Finance.  This is the merchant invoice total plus the initial payment",
                    "readOnly": true
                },
                "initial_payment": {
                    "type": "number",
                    "description": "Initial payment, also known as the processing fee.",
                    "readOnly": true
                },
                "additional_down_payment": {
                    "type": "number",
                    "description": "The amount of additional down payment on the lease being made by the customer.  This field is calculated by using amount_collected and subtracting the initial payment and tax amounts.When the customer ",
                    "readOnly": true
                },
                "tax": {
                    "type": "number",
                    "description": "The taxes levied against the initial payment, and down payment, if any.  This amount may be zero in some jurisdictions.",
                    "readOnly": true
                },
                "final_lease_amount": {
                    "type": "number",
                    "description": "The simple_invoice_amount minus initial_payment and additional_down_payment, if any",
                    "readOnly": true
                }
            },
            "description": "Contains information about the goods and/or services received by the customer from the merchant, and the total amounts charged for those goods an/or services, sales tax and the amount collected from the customer."
        },
        "Lease": {
            "type": "object",
            "required": [
                "account_number",
                "account_type",
                "applicant_1",
                "reference_1",
                "reference_2",
                "routing_number"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the lease.",
                    "readOnly": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which this lease was created",
                    "readOnly": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which this lease was last updated",
                    "readOnly": true
                },
                "correlation_id": {
                    "type": "string",
                    "description": "An optional unique identifier supplied by the API consumer when submitting a lease application, that can be used to correlate the lease application and lease with data in an external system.",
                    "readOnly": true
                },
                "lease_application_id": {
                    "type": "string",
                    "description": "The id of the lease application that instigated this lease",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The status of the lease. The following status may be reported:\n  * __approval_accepted__ - The customer has accepted the approved lease application\n  * __lease_docs_created__ - The merchant invoice has been uploaded and the lease documents have been generated and awaiting the customer's signature\n  * __awaiting_delivery__ - The customer has signed the lease documents, and the lease is awaiting delivery confirmation\n  * __awaiting_funding_conditions__ - The merchant has indicated that delivery is complete, but there are other funding conditions that need to be met\n  * __awaiting_funding__ - Awaiting funding\n  * __funded__ - The lease has been funded\n  * __canceled__ - The lease was canceled\n  * __expired__ - The lease has expired",
                    "readOnly": true,
                    "enum": [
                        "approval_accepted",
                        "lease_docs_created",
                        "lease_docs_signed",
                        "awaiting_delivery",
                        "awaiting_funding_conditions",
                        "awaiting_funding",
                        "funded",
                        "canceled",
                        "expired"
                    ]
                },
                "status_message": {
                    "type": "string",
                    "description": "An optional message further describing the status of the lease application.",
                    "readOnly": true
                },
                "applicant_1": {
                    "description": "The primary individual applying for a lease.",
                    "$ref": "#/definitions/Lease Applicant"
                },
                "applicant_2": {
                    "description": "The co-applicant for a lease.",
                    "$ref": "#/definitions/Lease Applicant"
                },
                "reference_1": {
                    "description": "The first reference for the applicant(s)",
                    "$ref": "#/definitions/Lease Application Reference"
                },
                "reference_2": {
                    "description": "The second reference for the applicant(s)",
                    "$ref": "#/definitions/Lease Application Reference"
                },
                "routing_number": {
                    "type": "string",
                    "description": "Applicant's or applicants' bank account routing number.  Must be a valid 9-digit routing number"
                },
                "account_number": {
                    "type": "string",
                    "description": "Applicant's or applicants' checking account routing number.  This must be a checking account.  Savings and other types of accounts are not acceptable.  Must be between 3 and 16 digits"
                },
                "account_type": {
                    "type": "string",
                    "description": "Applicant's or applicants' bank account type.  The only valid type is \"checking\".",
                    "enum": [
                        "checking"
                    ]
                },
                "auto_approved_amount": {
                    "type": "number",
                    "description": "The amount the applicant(s) has been approved for on a lease.",
                    "readOnly": true
                },
                "conditional_approved_amount": {
                    "type": "number",
                    "description": "An amount greater than the auto_approved_amount that the applicant(s) has been conditionally approved for, pending additional underwriting items are provided by the applicant.",
                    "readOnly": true
                },
                "lease_docs_url": {
                    "type": "string",
                    "description": "The URL to the docs for this lease.  The docs are only available after they've been generated.",
                    "readOnly": true
                },
                "lease_docs_signed_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the lease document was signed by the applicant.",
                    "readOnly": true
                }
            },
            "description": "Contains information about the customer (or customers), merchant invoice and  status and other lease details.  A lease is generated from a lease application on acceptance by the applicant(s)."
        },
        "Lease Applicant": {
            "type": "object",
            "required": [
                "address_1",
                "city",
                "dl_number",
                "dl_state",
                "dob",
                "email",
                "employment_1",
                "employment_2",
                "last_name",
                "main_phone",
                "ssn",
                "state",
                "zip"
            ],
            "properties": {
                "address_1": {
                    "type": "string",
                    "description": "Applicant's street address."
                },
                "address_2": {
                    "type": "string",
                    "description": "Second line of the applicant's street address, if necessary."
                },
                "alt_phone": {
                    "type": "string",
                    "description": "Alternate phone number for the applicant.  Must be at least 10 digits. Normal phone punctuation is acceptable if formatted."
                },
                "city": {
                    "type": "string",
                    "description": "Applicant's address city."
                },
                "dl_number": {
                    "type": "string",
                    "description": "Applicant's driver's license number."
                },
                "dl_state": {
                    "type": "string",
                    "description": "Applicant's driver's license state abbreviation.  Must be a valid state abbreviation."
                },
                "dob": {
                    "type": "string",
                    "format": "date",
                    "description": "Applicant's date of birth."
                },
                "email": {
                    "type": "string",
                    "description": "Email address for the applicant."
                },
                "employment_1": {
                    "description": "Information about the applicant's primary or first job.",
                    "$ref": "#/definitions/Employment Information"
                },
                "employment_2": {
                    "description": "Information about the applicant's second job",
                    "$ref": "#/definitions/Employment Information"
                },
                "first_name": {
                    "type": "string",
                    "description": "First name of the applicant."
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of the applicant."
                },
                "main_phone": {
                    "type": "string",
                    "description": "Phone number for the applicant.  Must be at least 10 digits. Normal phone punctuation is acceptable if formatted."
                },
                "middle_name": {
                    "type": "string",
                    "description": "Middle name of the applicant."
                },
                "ssn": {
                    "type": "string",
                    "example": "123-45-6789",
                    "description": "Applicant's social security number."
                },
                "state": {
                    "type": "string",
                    "description": "Applicant's address state."
                },
                "zip": {
                    "type": "string",
                    "description": "Applicant's address zip.  Must be 5 or 9 digits only."
                }
            },
            "description": "An applicant for a lease.  Contains information that uniquely identifies an individual applying for a lease.  Includes, name, SSN and bank information."
        },
        "Lease Application": {
            "type": "object",
            "required": [
                "account_number",
                "account_type",
                "applicant_1",
                "reference_1",
                "reference_2",
                "routing_number"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the lease application",
                    "readOnly": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which this lease application was created",
                    "readOnly": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which this lease application was last updated",
                    "readOnly": true
                },
                "correlation_id": {
                    "type": "string",
                    "description": "An optional unique identifier supplied by the API consumer, that can be used to correlate the lease application to an external system.  If a value is supplied, it must be unique within the scope of the merchant.  The value will be copied to the resulting lease, once the lease application is accepted by the applicant, allowing both lease applications and leases to be retrieved."
                },
                "status": {
                    "type": "string",
                    "description": "The status of a submitted lease application. The following status values may be reported:\n\n  * __processing__ - The application is being evaluated\n  * __see_portal__ - There is a problem with the application.  See the Portal application for details\n  * __approved_with_conditions__ - The application is conditionally approved, and some conditions still need to be satisfied\n  * __approved__ - The application is approved\n  * __denied__ - The application was denied\n  * __approval_accepted__- The approval has been accepted by the applicant\n  * __rejected__ - The approval was rejected by the applicant\n  * __canceled__ - The application has been canceled\n  * __expired__ - The application has expired\n",
                    "readOnly": true,
                    "enum": [
                        "processing",
                        "see_portal",
                        "approved_with_conditions",
                        "approved",
                        "denied",
                        "approval_accepted",
                        "rejected",
                        "canceled",
                        "expired"
                    ]
                },
                "status_message": {
                    "type": "string",
                    "description": "An optional message further describing the status of the lease application.",
                    "readOnly": true
                },
                "lease_id": {
                    "type": "string",
                    "description": "The id of the corresponding lease that is created when the lease application is accepted by the applicant(s).  This field will be null until accepted.",
                    "readOnly": true
                },
                "applicant_1": {
                    "description": "The primary individual applying for a lease.",
                    "$ref": "#/definitions/Lease Applicant"
                },
                "applicant_2": {
                    "description": "The co-applicant for a lease.",
                    "$ref": "#/definitions/Lease Applicant"
                },
                "reference_1": {
                    "description": "The first reference for the applicant(s)",
                    "$ref": "#/definitions/Lease Application Reference"
                },
                "reference_2": {
                    "description": "The second reference for the applicant(s)",
                    "$ref": "#/definitions/Lease Application Reference"
                },
                "routing_number": {
                    "type": "string",
                    "description": "Applicant's or applicants' bank account routing number.  Must be a valid 9-digit routing number"
                },
                "account_number": {
                    "type": "string",
                    "description": "Applicant's or applicants' checking account routing number.  This must be a checking account.  Savings and other types of accounts are not acceptable.  Must be between 3 and 16 digits"
                },
                "account_type": {
                    "type": "string",
                    "description": "Applicant's or applicants' bank account type.  The only valid type is \"checking\"",
                    "enum": [
                        "checking"
                    ]
                },
                "auto_approved_amount": {
                    "type": "number",
                    "description": "The amount the applicant(s) has been approved for on a lease.",
                    "readOnly": true
                },
                "conditional_approved_amount": {
                    "type": "number",
                    "description": "An amount greater than the auto_approved_amount that the applicant(s) has been conditionally approved, pending additional underwriting items are provided by the applicant.",
                    "readOnly": true
                },
                "approval_accepted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time at which the applicant accepted the approved lease application",
                    "readOnly": true
                }
            },
            "description": "A lease application, containing information about the applicant (or applicants), approval status and approval details.  A lease is generated from a lease application on acceptance by the applicant."
        },
        "Lease Application Disclosures": {
            "type": "object",
            "properties": {
                "disclosure_text": {
                    "type": "string",
                    "example": "The text of the lease application disclosures",
                    "description": "The disclosure text",
                    "readOnly": true
                },
                "content_type": {
                    "type": "string",
                    "example": "text/plain",
                    "description": "The media type of the disclosure text",
                    "readOnly": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the disclosures were initially created",
                    "readOnly": true
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the disclosures were last updated",
                    "readOnly": true
                }
            },
            "description": "The disclosures that should be shown or read to an applicant before starting the lease application process."
        },
        "Lease Application Reference": {
            "type": "object",
            "required": [
                "name",
                "phone"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Full name of the reference for the applicant(s)."
                },
                "phone": {
                    "type": "string",
                    "description": "Phone number for the person acting as a reference."
                }
            },
            "description": "An individual acting as a reference for a lease applicant or applicants."
        },
        "UnprocessableEntityResponse": {
            "type": "object",
            "properties": {
                "extra": {
                    "type": "object",
                    "description": "An arbitrary object that can be sent back.  It may the object passed in the request, null, or something else altogether"
                },
                "messages": {
                    "type": "array",
                    "description": "One or more messages describing the causes of the error",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "An overall status for the request"
                }
            }
        }
    }
}
